#+TITLE: Keyboards.jl
#+AUTHOR: Stefanos Carlström
#+EMAIL: stefanos.carlstrom@gmail.com

#+PROPERTY: header-args:julia :session *julia-README*

Small experiment to generate keyboards with custom layouts.


#+BEGIN_SRC julia :exports none
  using Pkg
  Pkg.activate(".")
#+END_SRC

#+BEGIN_SRC julia :exports code
  using Keyboards
  using TikzPictures
  using Unitful
#+END_SRC


#+BEGIN_SRC julia :exports code
  left = keyboard"""
    :1.75 § 1 2 3 4 5
    : $⇥$:1.75 Q W E R T
    : ctrl:1.75 A S D [F] G
    $⇧$:1.75 ` Z X C V B
    mod1 ctrl alt:1.25 cmd:1.25 space:2.25 $←$:1.5
  """
  save(SVG("test_keyboard_left"), left, options="font=\\LARGE")
#+END_SRC

[[file:test_keyboard_left.svg]]

#+BEGIN_SRC julia :exports code
  right = keyboard"""
    6 7 8 9 0 - = $←$:1.5
    Y U I O P [ ] $↩$:1:2
    H [J] K L ; ' \backslash :
    N M , . / $⇧$:2 :0.25 $▲$
    space:2.25 $↩$:2 cmd alt $◀$ $▼$ $▶$
  """
  save(SVG("test_keyboard_right"), right, options="font=\\LARGE")
#+END_SRC

[[file:test_keyboard_right.svg]]

It is possible to generate a [[https://github.com/jagot/Circuit.jl][Circuit]] from a =Keyboard=, and from the
=Circuit= a [[https://github.com/jagot/PCBs.jl][PCB]], or directly from =Keyboard= to =PCB= (path necessary
to find parts footprints, varies between platforms):
#+BEGIN_SRC julia
  using PCBs

  ENV["KISYSMOD"] = "/Library/Application Support/kicad/modules"
  PCBs.save(convert(PCB, left, "left"), true)
  run(`open left.kicad_pcb`)
#+END_SRC

This will give the following PCB (connections have to be manually
added, at present):

[[file:left-pcb.svg]]
